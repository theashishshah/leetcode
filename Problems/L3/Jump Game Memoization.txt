title = Jump Game Memoization



difficulty = Medium

desc -----
You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.
Print true if you can reach the last index, or false otherwise.
Input
The first line of the input is the size of the array as an integer 
N
N.
The second line consists of array elements, 
N
N space-separated integers.

Constraints
1 
≤
N
≤
≤N≤ 104
0 
≤
A
[
i
]
≤
≤A[i]≤ 105
Output
Print "true" (without quotes) if you can reach the last index and "false" (without quotes) otherwise.







Example
Input:
5
2 3 1 1 4
Output:
true
Explanation:
Jump 1 step from index 0 to 1, then 3 steps to the last index.

Input:
5
3 2 1 0 4
Output:
false
Explanation:
You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.








test Cases -----




solution -----
#include <bits/stdc++.h> // header file includes every Standard library
using namespace std;

bool canJump(vector<int>& nums) {
    int maxReach = 0;
    for (int i = 0; i < nums.size(); i++) {
        if (i > maxReach) return false;
        maxReach = max(maxReach, i + nums[i]);
    }
    return true;
}

int main() {
    int n;
    cin >> n;
    vector<int> arr;
    for (int i = 0; i < n; i++) {
        int element;
        cin >> element;
        arr.push_back(element);
    }
    if (canJump(arr) == 1) cout << "true";
    if (canJump(arr) == 0) cout << "false";
    return 0;
}