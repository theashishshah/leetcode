title = Palindrome linked list



difficulty = Medium

desc -----
You are given a linked list head as input having N nodes. check whether list is palindrome or not.
Input
User Task:
Since this will be a functional problem, you don't have to take input. You just have to complete the function is_palindrome() that takes the head of the linked list as a parameter.

Custom Input
The first line of input contains the length of linked list.
The following line of input contains elements of linked list separated by space.

Constraints:
0 ≤ N ≤ 104
0 ≤ val ≤ 106
Output
Check whether the list is palindrome or not.




Example
Sample Input:
5
1 2 3 2 1
Sample Output:
true








test Cases -----




solution -----
'''
class Node:
    def __init__(self, val):
        self.val = val
        self.next = None
'''

def is_palindrome(node):
    slow = fast = head
    while fast and fast.next:
        slow = slow.next
        fast = fast.next.next
    
    prev = None
    curr = slow
    while curr:
        temp = curr.next
        curr.next = prev
        prev = curr
        curr = temp
    
    head1 = head
    head2 = prev
    while head1 and head2:
        if head2.val != head1.val:
            return False

        head1 = head1.next
        head2 = head2.next 
    return True