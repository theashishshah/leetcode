title = Remove Duplicates from Sorted List



difficulty = Medium

desc -----
Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well.
Input
User Task
This is a function problem. You don't have to take any input. You are required to complete the function deleteDuplicates that takes a node head as a parameter.

Constraints
1 ≤ N ≤ 105, N being the size of the Initial Linked List.
0 ≤ Node. data ≤ 105
Output
You have to return the head of the modified linked list.




Example
Input:
7
1 2 2 5 5 6 7
Output:
[1, 6, 7]







test Cases -----




solution -----
class Node:
    def __init__(self, val):
        self.data = val
        self.next = None

def deleteDuplicates(head):
    dummy = Node(0) 
    dummy.next = head
    prev = dummy  
    
    while head:
        if head.next and head.data == head.next.data:
            while head.next and head.data == head.next.data:
                head = head.next
            prev.next = head.next 
        else:
            prev = prev.next 
        head = head.next  

    return dummy.next