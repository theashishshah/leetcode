title = D Triplets


difficulty = Hard

desc -----
Given an array Arr[] of size N as input, your task is to count the number of triplets Arr[i], Arr[j] and Arr[k] such that:- i < j < k and the absolute difference between every 2 elements of triplets is less than or equal to P i. e |Arr[i] - Arr[j]| <= P, |Arr[i] - Arr[k]| <= P and |Arr[j] - Arr[k]| <= P
Input
The first line of input contains two space- separated integers N and P.
next line contains N space separated integers depicting the values of the Arr[].

Constraints:-
3 <= N <= 105
1 <= Arr[i], P <= 109
0 <= i <= N-1
Output
Return the count of triplets that satisfies the above conditions.






Example
Sample Input:-
5 4
1 3 2 5 9

Sample Output:-
4

Explanation:-
(1, 3, 2), (1, 3, 5), (1, 2, 5), (2, 3, 5) are the required triplets

Sample Input:-
5 3
1 8 4 2 9

Sample Output:-
1




test Cases -----



solution -----

m, p = map(int, input().split())
l = list(map(int, input().split()))
l.sort()
c = 0
i = 0
j = 0

while i < m - 2:
    while j < m and l[j] - l[i] <= p:
        j += 1

    count = j - i - 1 
    
    if count >= 2:
        c += (count * (count - 1)) // 2 
    i += 1 
print(c)